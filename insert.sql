CREATE DATABASE swp391_db_releasee;

USE swp391_db_releasee;

SET FOREIGN_KEY_CHECKS = 0;
-- DROP DATABASE swp391_db_releasee

DROP TABLE IF EXISTS t05_role;
CREATE TABLE t05_role (
   C05_ROLE_ID INT PRIMARY KEY,
   C05_ROLE_DESC ENUM('STUDENT', 'PARENT', 'TEACHER', 'MANAGER', 'ADMIN') NOT NULL
);


DROP TABLE IF EXISTS t14_user;
CREATE TABLE t14_user (
    C14_USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    C14_USER_USERNAME VARCHAR(50) NOT NULL UNIQUE,
    C14_USER_PASSWORD VARCHAR(255) NOT NULL,
    C14_ACC_STATUS BIT(1) NOT NULL, -- lock/unlock
    C14_USER_CODE VARCHAR(255) NOT NULL UNIQUE,
    C14_USER_NAME VARCHAR(50),
    C14_USER_PHONE VARCHAR(50),
    C14_USER_ADDRESS VARCHAR(100) ,
    C14_USER_DOB DATE,
    C14_USER_GENDER BIT(1), -- male/female
    C14_USER_EMAIL VARCHAR(50) NOT NULL UNIQUE,
    C14_VERIFICATION_CODE VARCHAR(255) DEFAULT(NULL),
    C14_PROFILE_IMAGE VARCHAR(255) DEFAULT('file path'),
    C14_ROLE_ID INT NOT NULL,
    C14_PARENT_ID INT,
    CONSTRAINT FK_USER_ROLE FOREIGN KEY (C14_ROLE_ID) REFERENCES t05_role(C05_ROLE_ID),
    CONSTRAINT FK_USER_PARENT FOREIGN KEY (C14_PARENT_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT CHK_USER_CODE CHECK (C14_USER_CODE LIKE 'USER%')
);
SELECT * FROM t14_user;

DROP TABLE IF EXISTS t13_subject;
CREATE TABLE t13_subject (  
    C13_SUBJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    C13_SUBJECT_CODE VARCHAR(255) NOT NULL UNIQUE,
    C13_SUBJECT_NAME VARCHAR(50) NOT NULL UNIQUE,
    C13_SUBJECT_DESC TEXT NOT NULL
);

DROP TABLE IF EXISTS t03_center;
CREATE TABLE t03_center (
    C03_CENTER_ID INT AUTO_INCREMENT PRIMARY KEY,
    C03_CENTER_CODE VARCHAR(255) NOT NULL UNIQUE,
    C03_CENTER_NAME VARCHAR(50) NOT NULL,
    C03_CENTER_DESC TEXT NOT NULL,
    C03_CENTER_ADDRESS VARCHAR(50) NOT NULL,
    C03_CENTER_PHONE VARCHAR(50) NOT NULL,
    C03_CENTER_EMAIL VARCHAR(50) NOT NULL,
    C03_CENTER_REGULATIONS TEXT NOT NULL,
    C03_CREATED_AT DATETIME NOT NULL,
    C03_CENTER_STATUS ENUM('Approved', 'Rejected', 'Wait_to_process') NOT NULL DEFAULT 'Wait_to_process',
    C03_IMAGE_PATH TEXT,
    C03_MANAGER_ID INT NOT NULL,
    CONSTRAINT FK_CENTER_MANAGER FOREIGN KEY (C03_MANAGER_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT CHK_CENTER_CODE CHECK (C03_CENTER_CODE LIKE 'CENTER%')
);


DROP TABLE IF EXISTS t01_course;
CREATE TABLE t01_course (
   C01_COURSE_ID INT AUTO_INCREMENT PRIMARY KEY,
   C01_COURSE_NAME VARCHAR(50) NOT NULL,
   C01_COURSE_CODE VARCHAR(255) NOT NULL UNIQUE,
   C01_COURSE_DESC TEXT NOT NULL,
   C01_COURSE_START_DATE DATETIME NOT NULL,
   C01_COURSE_END_DATE DATETIME NOT NULL,
   C01_AMOUNT_OF_STUDENTS INT NOT NULL,
   C01_COURSE_FEE FLOAT NOT NULL, -- monthly 
   C01_TOTAL_COURSE_FEE FLOAT NOT NULL,
   C01_CENTER_ID INT NOT NULL,
   C01_SUBJECT_ID INT NOT NULL,
   C01_TEACHER_ID INT NOT NULL,
   CONSTRAINT T01_CK_DATE CHECK (C01_COURSE_END_DATE >= C01_COURSE_START_DATE),
   CONSTRAINT FK_COURSE_CENTER FOREIGN KEY (C01_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID),
   CONSTRAINT FK_COURSE_SUBJECT FOREIGN KEY (C01_SUBJECT_ID) REFERENCES t13_subject(C13_SUBJECT_ID),
   CONSTRAINT FK_COURSE_TEACHER FOREIGN KEY (C01_TEACHER_ID) REFERENCES t14_user(C14_USER_ID)

);


DROP TABLE IF EXISTS t18_room;
CREATE TABLE t18_room (
     C18_ROOM_ID INT AUTO_INCREMENT PRIMARY KEY,
     C18_ROOM_NAME VARCHAR(100) NOT NULL,
     C18_CENTER_ID INT NOT NULL,
     CONSTRAINT CK_T18_UNQ UNIQUE(C18_ROOM_NAME, C18_CENTER_ID),
     CONSTRAINT FK_ROOM_CENTER FOREIGN KEY (C18_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID)
);

DROP TABLE IF EXISTS t02_slot;
CREATE TABLE t02_slot (
    C02_SLOT_ID INT AUTO_INCREMENT PRIMARY KEY,    
    C02_SLOT_START_TIME DATETIME NOT NULL,
    C02_SLOT_END_TIME DATETIME NOT NULL, 
    C02_COURSE_ID INT NOT NULL, -- LẤY THÔNG TIN TEACHER Ở BẢNG COURSE !
    C02_ROOM_ID INT NOT NULL, -- thành FK --> đưa qua bảng room
    CONSTRAINT T02_CK_TIME CHECK (C02_SLOT_END_TIME > C02_SLOT_START_TIME),
    CONSTRAINT CK_T02_UNQ UNIQUE(C02_SLOT_START_TIME, C02_SLOT_END_TIME, C02_ROOM_ID),
    CONSTRAINT FK_SLOT_COURSE FOREIGN KEY (C02_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID),
    CONSTRAINT FK_SLOT_ROOM FOREIGN KEY (C02_ROOM_ID) REFERENCES t18_room(C18_ROOM_ID)
);


-- user là student/teacher
DROP TABLE IF EXISTS t06_feedback;
CREATE TABLE t06_feedback (
    C06_FEEDBACK_ID INT AUTO_INCREMENT PRIMARY KEY,
    C06_FEEDBACK_DESC TEXT NOT NULL,
    C06_CREATED_AT DATETIME NOT NULL,
    C06_UPDATED_AT DATETIME DEFAULT NULL,
    C06_ACTOR_ROLE ENUM('TEACHER', 'STUDENT', 'PARENT') NOT NULL,
    C06_ACTOR_ID INT NOT NULL, -- Id này lấy từ session đăng nhập
    C06_SEND_TO_USER VARCHAR(255) NOT NULL, -- Cái này là mã code khi actor input thông tin feedback
    CONSTRAINT FK_T06_TO FOREIGN KEY(C06_SEND_TO_USER) REFERENCES t14_user(C14_USER_CODE),
    CONSTRAINT FK_T06_ACTOR FOREIGN KEY (C06_ACTOR_ID) REFERENCES t14_user(C14_USER_ID)
    -- Cái này xử lí nghiệp vụ ở java là khi tạo feeback <actor_id, send_to_user> ko thể là cùng một người
    -- ---> Nghĩa là một người ko thể tạo feedback cho chính người đó
);

-- user phải là teacher
DROP TABLE IF EXISTS t07_material;
CREATE TABLE t07_material (
    C07_MATERIALS_ID INT AUTO_INCREMENT PRIMARY KEY,
    C07_MATERIALS_NAME VARCHAR(100) NOT NULL,
    C07_TEACHER_ID INT NOT NULL,
    C07_SUBJECT_ID INT NOT NULL,
    CONSTRAINT FK_MATERIAL_TEACHER FOREIGN KEY (C07_TEACHER_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_MATERIAL_SUBJECT FOREIGN KEY (C07_SUBJECT_ID) REFERENCES t13_subject(C13_SUBJECT_ID)
);

-- user là học sinh
DROP TABLE IF EXISTS t09_attendance;
CREATE TABLE t09_attendance (
    C09_ATTENDANCE_ID INT AUTO_INCREMENT PRIMARY KEY,
    C09_ATTENDANCE_STATUS BIT(1) NOT NULL,
    C09_STUDENT_ID INT NOT NULL,
    C09_SLOT_ID INT NOT NULL,
    CONSTRAINT CK UNIQUE(C09_STUDENT_ID, C09_SLOT_ID),
    CONSTRAINT FK_ATTENDANCE_STUDENT FOREIGN KEY (C09_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_ATTENDANCE_SLOT FOREIGN KEY (C09_SLOT_ID) REFERENCES t02_SLOT(C02_SLOT_ID)
);

-- user là học sinh
DROP TABLE IF EXISTS t10_result;
CREATE TABLE t10_result (
    C10_RESULT_ID INT AUTO_INCREMENT PRIMARY KEY,
    C10_RESULT_TYPE INT NOT NULL, -- hệ số điểm: x1, x2, x3
    C10_RESULT_VAL INT NOT NULL,
    C10_STUDENT_ID INT NOT NULL,
    C10_COURSE_ID INT NOT NULL,
    CONSTRAINT FK_RESULT_STUDENT FOREIGN KEY (C10_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_RESULT_COURSE FOREIGN KEY (C10_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID)
);

-- Bảng để Admin gửi thông báo đến cả hệ thống
DROP TABLE IF EXISTS t11_system_notification;
CREATE TABLE t11_system_notification (
    C11_ID INT AUTO_INCREMENT PRIMARY KEY,
    C11_TITLE VARCHAR(255) NOT NULL,
    C11_CONTENT TEXT NOT NULL,
    C11_CREATED_AT DATETIME NOT NULL,
    C11_UPDATED_AT DATETIME DEFAULT NULL
);


-- n-n: course - student
DROP TABLE IF EXISTS t15_enrollment; 
CREATE TABLE t15_enrollment (
     C15_ENROLLMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
     C15_STUDENT_ID INT NOT NULL,
     C15_COURSE_ID INT NOT NULL,
     CONSTRAINT CK_T15_FK UNIQUE(C15_STUDENT_ID, C15_COURSE_ID),
     CONSTRAINT FK_ENROLLMENT_STUDENT FOREIGN KEY (C15_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_ENROLLMENT_COURSE FOREIGN KEY (C15_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID)
);

-- n-n: center - student, center - teacher
-- role in user table <student or teacher>!! 
DROP TABLE IF EXISTS t16_user_center; 
CREATE TABLE t16_user_center (
     C16_USER_CENTER_ID INT AUTO_INCREMENT PRIMARY KEY,
     C16_USER_ID INT NOT NULL, 
     C16_CENTER_ID INT NOT NULL,
     CONSTRAINT CK_T16_FK UNIQUE(C16_USER_ID, C16_CENTER_ID),
     CONSTRAINT FK_T16_USER FOREIGN KEY (C16_USER_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_T16_CENTER FOREIGN KEY (C16_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID)
);

DROP TABLE IF EXISTS t04_payment_method;
CREATE TABLE t04_payment_method (
	 C04_PMETHOD_ID INT PRIMARY KEY,
     C04_PMETHOD_DESC ENUM('Cash','E-Banking') NOT NULL
);

DROP TABLE IF EXISTS t08_bill;
CREATE TABLE t08_bill (
     C08_BILL_ID INT AUTO_INCREMENT PRIMARY KEY,
     C08_STATUS ENUM('Succeeded','Failed') NOT NULL,
     C08_CREATED_AT DATETIME NOT NULL,
     C08_STUDENT_ID INT NOT NULL,
     C08_COURSE_ID INT NOT NULL,
     C08_PMETHOD_ID INT NOT NULL,
     CONSTRAINT CK_T08_UNIQUE UNIQUE(C08_CREATED_AT, C08_STUDENT_ID, C08_COURSE_ID),
     CONSTRAINT FK_BILL_STUDENT FOREIGN KEY(C08_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_BILL_COURSE FOREIGN KEY(C08_COURSE_ID) REFERENCES t01_course(C01_COURSE_ID),
     CONSTRAINT FK_BILL_PMETHOD FOREIGN KEY(C08_PMETHOD_ID) REFERENCES t04_payment_method(C04_PMETHOD_ID)
);


-- n-n: 1 student học nhiều slot, 1 slot có nhiều student
DROP TABLE IF EXISTS t17_student_slot; 
CREATE TABLE t17_student_slot (
     C17_STUDENT_SLOT_ID INT AUTO_INCREMENT PRIMARY KEY,
     C17_STUDENT_ID INT NOT NULL,
     C17_SLOT_ID INT NOT NULL,
     CONSTRAINT CK_T17_UNQ UNIQUE(C17_STUDENT_ID, C17_SLOT_ID),
     CONSTRAINT FK_T17_STUDENT FOREIGN KEY (C17_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_T17_SLOT FOREIGN KEY (C17_SLOT_ID) REFERENCES t02_slot(C02_SLOT_ID)
);

-- bảng này để dùng để phản hồi/ giúp teacher biết đơn apply dạy trung tâm đã được duyệt hay chưa
-- userID --> bắt buộc teacher !
DROP TABLE IF EXISTS t12_apply_center; 
CREATE TABLE t12_apply_center (
     C12_APPLY_ID INT AUTO_INCREMENT PRIMARY KEY,
     C12_TEACHER_ID INT NOT NULL,
     C12_CENTER_ID INT NOT NULL,
     C12_TITLE VARCHAR(255) NOT NULL,
     C12_CONTENT VARCHAR(255) NOT NULL,
     C12_APPLY_STATUS ENUM('Approved', 'Rejected', 'Wait_to_process') NOT NULL DEFAULT 'Wait_to_process',
     CONSTRAINT CK_C12_UNQ UNIQUE(C12_TEACHER_ID, C12_CENTER_ID),
     CONSTRAINT FK_T12_TEACHER FOREIGN KEY (C12_TEACHER_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_T12_CENTER FOREIGN KEY (C12_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID)
);
-- BỔ SUNG CREATED AT

-- MANAGER gửi thông báo cho "vài cá thể sống :)))" 
DROP TABLE IF EXISTS t19_private_notifications;
CREATE TABLE t19_private_notifications (
     C19_ID INT AUTO_INCREMENT PRIMARY KEY,
     C19_TITLE VARCHAR(255) NOT NULL,
     C19_CONTENT TEXT NOT NULL,
     C19_CREATED_AT DATETIME NOT NULL,
     C19_UPDATED_AT DATETIME DEFAULT NULL,
     C19_ACTOR ENUM('MANAGER', 'ADMIN') NOT NULL,
     C19_SEND_TO_USER VARCHAR(255),
     C19_SEND_TO_CENTER VARCHAR(255),
     CONSTRAINT FK_SEND_TO_USER FOREIGN KEY(C19_SEND_TO_USER) REFERENCES t14_user(C14_USER_CODE),
     CONSTRAINT FK_SEND_TO_CENTER FOREIGN KEY (C19_SEND_TO_CENTER) REFERENCES t03_center(C03_CENTER_CODE),
     CONSTRAINT CHK_SEND_TO CHECK (C19_SEND_TO_USER IS NOT NULL OR C19_SEND_TO_CENTER IS NOT NULL)
);
                       

-- MANAGER GỬI THÔNG BÁO TỚI 1 TRUNG TÂM --> ko cần admin duyệt 
DROP TABLE IF EXISTS t20_public_notifications;
CREATE TABLE t20_public_notifications (
     C20_ID INT AUTO_INCREMENT PRIMARY KEY,
     C20_TITLE VARCHAR(255) NOT NULL,
     C20_CONTENT TEXT NOT NULL,
     C20_CREATED_AT DATETIME NOT NULL,
     C20_UPDATED_AT DATETIME DEFAULT NULL,
     C20_SEND_TO_CENTER VARCHAR(255) NOT NULL, -- có thể getId của manager tạo thông báo từ đây
     CONSTRAINT FK_T20_CENTER FOREIGN KEY (C20_SEND_TO_CENTER) REFERENCES t03_center(C03_CENTER_CODE)
);


--  MANAGER TẠO BÀI POST CHO 1 TRUNG TÂM --> phải cần admin duyệt
DROP TABLE IF EXISTS t21_center_posts;
CREATE TABLE t21_center_posts (
     C21_ID INT AUTO_INCREMENT PRIMARY KEY,
     C21_TITLE VARCHAR(255) NOT NULL,
     C21_CONTENT TEXT NOT NULL,
     C21_POST_STATUS ENUM('Approved', 'Rejected', 'Wait_to_process') NOT NULL DEFAULT 'Wait_to_process',
     C21_FILE_URL VARCHAR(255) DEFAULT NULL, -- xử lí sau
     C21_CREATED_AT DATETIME NOT NULL,
     C21_UPDATED_AT DATETIME DEFAULT NULL,	
     C21_SEND_TO_CENTER VARCHAR(255) NOT NULL,
     CONSTRAINT FK_T21_CENTER FOREIGN KEY (C21_SEND_TO_CENTER) REFERENCES t03_center(C03_CENTER_CODE)
);

SELECT * FROM t21_center_posts;
SET FOREIGN_KEY_CHECKS = 1;
